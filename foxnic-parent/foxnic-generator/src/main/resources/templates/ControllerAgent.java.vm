package #(package);

import java.util.List;
import org.springframework.web.bind.annotation.RequestMapping;
import com.github.foxnic.dao.data.PagedList;
import org.springframework.cloud.openfeign.FeignClient;
import com.scientific.tailoring.framework.feign.FeignConfigs;
import com.github.foxnic.springboot.mvc.Result;

#(imports)

#(classJavaDoc)

@FeignClient(value = #(msNameConst), contextId = #(simpleName).API_CONTEXT_PATH , configuration = FeignConfigs.class)
public interface #(simpleName) {
	
	/**
	 * 基础路径 , #(apiBasicPath)
	*/
	public static final String API_BASIC_PATH = "#(apiBasicPath)";
	
	/**
	 * API 上下文路径 , #(apiContextPath)
	*/
	public static final String API_CONTEXT_PATH = "#(apiContextPath)";
	
	/**
	 * API 基础路径 , 由 API_BASIC_PATH 和 API_CONTEXT_PATH 两部分组成
	*/
	public static final String API_PREFIX = "/" + API_BASIC_PATH + "/"+API_CONTEXT_PATH+"/";
	
	/**
	 * 添加#(topic)
	 */
	public static final String INSERT = API_PREFIX + "insert";
	
	/**
	 * 按主键删除#(topic)
	 */
	public static final String DELETE = API_PREFIX + "delete";
	
	
	/**
	 * 按主键删除#(topic)
	 */
	public static final String BATCH_DELETE = API_PREFIX + "batch-delete";
	
	
	/**
	 * 更新#(topic)
	 */
	public static final String UPDATE = API_PREFIX + "update";
	
	
	/**
	 * 保存#(topic)
	 */
	public static final String SAVE = API_PREFIX + "save";
	
	/**
	 * 按主键获取#(topic)
	 */
	public static final String GET_BY_ID = API_PREFIX + "get-by-id";
	
	/**
	 * 查询全部符合条件的#(topic)
	 */
	public static final String QUERY_LIST = API_PREFIX + "query-list";
	
	/**
	 * 分页查询符合条件的#(topic)
	 */
	public static final String QUERY_PAGED_LIST = API_PREFIX + "query-paged-list";
	
	/**
	 * 添加#(topic)
	*/
	@RequestMapping(RoleServiceAgent.INSERT)
	Result<Role> insert(RoleVO roleVO);
	
	/**
	 * 按主键删除#(topic)
	*/
	@RequestMapping(RoleServiceAgent.DELETE)
	Result<Role> deleteById(Integer id);
	
	
	/**
	 * 按主键删除#(topic)
	*/
	@RequestMapping(RoleServiceAgent.BATCH_DELETE)
	Result<Role> deleteByIds(List<Integer> id);
	
	/**
	 * 更新#(topic)
	*/
	@RequestMapping(RoleServiceAgent.UPDATE)
	Result<Role> update(RoleVO roleVO);
	
	/**
	 * 更新#(topic)
	*/
	@RequestMapping(RoleServiceAgent.SAVE)
	Result<Role> save(RoleVO roleVO);
	
	/**
	 * 按主键获取#(topic)
	*/
	@RequestMapping(RoleServiceAgent.GET_BY_ID)
	Result<Role> getById(Integer id);
	
	/**
	 * 查询全部符合条件的#(topic)
	*/
	@RequestMapping(RoleServiceAgent.QUERY_LIST)
	Result<List<Role>> queryList(RoleVO sample);
	
	/**
	 * 分页查询符合条件的#(topic)
	*/
	@RequestMapping(RoleServiceAgent.QUERY_PAGED_LIST)
	Result<PagedList<Role>> queryPagedList(RoleVO sample);

}