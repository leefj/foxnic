package #(package);

 
import java.util.List;

import com.github.foxnic.dao.data.SaveMode;
import com.github.foxnic.dao.data.PagedList;
import com.github.foxnic.springboot.mvc.Result;

import org.springframework.web.bind.annotation.RestController;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;

#(imports)

#(classJavaDoc)

#if(isEnableSwagger)
@Api(tags = "#(topic)")
@ApiSort(#(apiSort))
#end
@RestController("#(beanName)")
public class #(simpleName) {

	@Autowired
	private #(serviceSimpleName) #(serviceVarName);

	
	/**
	 * 添加#(topic)
	*/
	#if(isEnableSwagger)
	#(swager4Insert)
	@ApiOperationSupport(order=1)
	#end
	#(validation4Insert)
	#if(isEnableMicroService)
	@SentinelResource(value = #(agentSimpleName).INSERT)
	#end
	@PostMapping(#(agentSimpleName).INSERT)
	public Result<#(poSimpleName)> insert(#(voSimpleName) #(voVarName)) {
		Result<#(poSimpleName)> result=new Result<>();
		boolean suc=roleService.insert(#(voVarName));
		result.success(suc);
		return result;
	}

	
	/**
	 * 删除#(topic)
	*/
	#if(isEnableSwagger)
	#(swager4DeleteById)
	@ApiOperationSupport(order=2)
	#end
	#(validation4DeleteById)
	#if(isEnableMicroService)
	@SentinelResource(value = #(agentSimpleName).DELETE)
	#end
	@PostMapping(#(agentSimpleName).DELETE)
	public Result<#(poSimpleName)> deleteById(Integer id) {
		Result<#(poSimpleName)> result=new Result<>();
		boolean suc=roleService.deleteByIdLogical(id);
		result.success(suc);
		return result;
	}
	
	
	#if(isSinglePK)
	/**
	 * 批量删除#(topic) <br>
	 * 联合主键时，请自行调整实现
	*/
	@ApiOperation(value = "批量删除#(topic)")
	@ApiImplicitParams({
		@ApiImplicitParam(name = #(voMetaSimpleName).#(idsPropertyConst) , value = "主键清单" , required = true , dataTypeClass=List.class , example = "[1,3,4]")
	})
	@NotNull(name = #(voMetaSimpleName).#(idsPropertyConst))
	@ApiOperationSupport(order=3)
	#if(isEnableMicroService)
	@SentinelResource(value = #(agentSimpleName).BATCH_DELETE)
	#end
	@PostMapping(#(agentSimpleName).BATCH_DELETE)
	public Result<#(poSimpleName)> deleteByIds(List<#(idsPropertyType)> #(idsPropertyName)) {
		Result<#(poSimpleName)> result=new Result<>();
		boolean suc=roleService.deleteByIdsLogical(#(idsPropertyName));
		result.success(suc);
		return result;
	}
	#end
	
	/**
	 * 更新#(topic)
	*/
	#if(isEnableSwagger)
	#(swager4Update)
	@ApiOperationSupport( order=4 , ignoreParameters = { #(ignoreParameters4Update) } ) 
	#end
	#(validation4Update)
	#if(isEnableMicroService)
	@SentinelResource(value = #(agentSimpleName).UPDATE)
	#end
	@PostMapping(#(agentSimpleName).UPDATE)
	public Result<#(poSimpleName)> update(#(voSimpleName) #(voVarName)) {
		Result<#(poSimpleName)> result=new Result<>();
		boolean suc=roleService.update(#(voVarName),SaveMode.NOT_NULL_FIELDS);
		result.success(suc);
		return result;
	}
	
	
	/**
	 * 保存#(topic)
	*/
	#if(isEnableSwagger)
	#(swager4Save)
	@ApiOperationSupport(order=5 ,  ignoreParameters = { #(ignoreParameters4Update) } )
	#end
	#(validation4Save)
	#if(isEnableMicroService)
	@SentinelResource(value = #(agentSimpleName).SAVE)
	#end
	@PostMapping(#(agentSimpleName).SAVE)
	public Result<#(poSimpleName)> save(#(voSimpleName) #(voVarName)) {
		Result<#(poSimpleName)> result=new Result<>();
		boolean suc=roleService.save(#(voVarName),SaveMode.NOT_NULL_FIELDS);
		result.success(suc);
		return result;
	}

	
	/**
	 * 获取#(topic)
	*/
	#if(isEnableSwagger)
	@ApiOperation(value = "获取#(topic)")
	@ApiImplicitParams({
		@ApiImplicitParam(name = #(voMetaSimpleName).#(idPropertyConst) , value = "主键" , required = true , dataTypeClass=#(idPropertyType).class , example = "1"),
	})
	@ApiOperationSupport(order=6)
	#end
	@NotNull(name = #(voMetaSimpleName).#(idPropertyConst))
	#if(isEnableMicroService)
	@SentinelResource(value = #(agentSimpleName).GET_BY_ID)
	#end
	@PostMapping(#(agentSimpleName).GET_BY_ID)
	public Result<#(poSimpleName)> getById(#(idPropertyType) #(idPropertyName)) {
		Result<#(poSimpleName)> result=new Result<>();
		#(poSimpleName) role=roleService.getById(#(idPropertyName));
		result.success(true).data(role);
		return result;
	}

	
	/**
	 * 查询#(topic)
	*/
	#if(isEnableSwagger)
	#(swager4QueryList)
	@ApiOperationSupport(order=5 ,  ignoreParameters = { #(voMetaSimpleName).PAGE_INDEX , #(voMetaSimpleName).PAGE_SIZE } )
	#end
	#if(isEnableMicroService)
	@SentinelResource(value = #(agentSimpleName).QUERY_LIST)
	#end
	@PostMapping(#(agentSimpleName).QUERY_LIST)
	public Result<List<#(poSimpleName)>> queryList(#(voSimpleName) sample) {
		Result<List<#(poSimpleName)>> result=new Result<>();
		List<#(poSimpleName)> list=roleService.queryList(sample);
		result.success(true).data(list);
		return result;
	}

	
	/**
	 * 分页查询#(topic)
	*/
	#if(isEnableSwagger)
	#(swager4QueryPagedList)
	@ApiOperationSupport(order=8)
	#end
	#if(isEnableMicroService)
	@SentinelResource(value = #(agentSimpleName).QUERY_PAGED_LIST)
	#end
	@PostMapping(#(agentSimpleName).QUERY_PAGED_LIST)
	public Result<PagedList<#(poSimpleName)>> queryPagedList(#(voSimpleName) sample) {
		Result<PagedList<#(poSimpleName)>> result=new Result<>();
		PagedList<#(poSimpleName)> list=roleService.queryPagedList(sample,sample.getPageSize(),sample.getPageIndex());
		result.success(true).data(list);
		return result;
	}


}